###########################################################################
#!/bin/bash
###########################################################################
#
#PBS -A quill


#PBS -l nodes=1:ppn=4

###PBS -l procs=4
#PBS -q medium
#
###########################################################################
#
nScripts=15
scriptNumber=1
nJobs=4
startSeed=$(( ( nJobs*(scriptNumber-1) ) + 1 ))
startSeedOriginal=$startSeed
endSeed=$((startSeed+nJobs-1))
maxBigLoops=1
do_st1=1
do_st2=1
do_NLOplots=1
do_st3=1
do_st4=0
do_rwgt=0
do_lhef=0
do_py6=0
do_py8=0
#

###########################################################################
#
echo -e "\nJob running parameters:\n"
echo -e "nJobs = $nJobs"
echo -e "Starting seed = $startSeed"
echo -e "Ending seed   = $endSeed  "
###########################################################################
# Get the name of the directory we're submitting this script from.
basedir=$PBS_O_WORKDIR
# Tell the current worker node to go into it.
cd $basedir
#
###########################################################################
# Check we have executables and a powheg.input-save input file.
if [ ! -e pwhg_main ] ; then
    echo ; echo "Could not find $PWD/pwhg_main executable. Quitting." ; echo
    exit
fi
if [ ! -e powheg.input-save ] ; then
    echo ; echo "Could not find $PWD/powheg.input-save input file. Quitting." ; echo
    exit
fi
#
###########################################################################
###########################################################################
#                                                                         #
#       					          do xgrids 2			                       #
#                                                                         #
###########################################################################
###########################################################################

if [ $scriptNumber -eq 1 ] ; then
	(echo -n ' ' ) >> Timings/Timings-initialisation.txt
	(echo -n Starting st1 xg2 ' ' ; date ) >> Timings/Timings-initialisation.txt
fi

mkdir -p xg2-$scriptNumber
cd xg2-$scriptNumber
cp ../powheg.input-save .
cp ../pwhg_main .
cp ../pwgseeds.dat .
cp ../*.dat .
cp ../*.top .

cat powheg.input-save | sed "s/xgriditeration.*/xgriditeration 2/ ; s/parallelstage.*/parallelstage 1/" > powheg.input

for i in `seq $startSeed $endSeed`
do
echo $i | ./pwhg_main > run-st1-xg2-$i.log 2>&1 &
done
wait

for i in `ls *.dat *.top *.log` ; do
if [ -e ../$i ] ; then
   echo "File $i exists in base directory, not copying"
else
    echo "Copying $i to base directory";
    cp $i $basedir
fi
done

cd $basedir
rm -rf xg2-$scriptNumber

if [ $scriptNumber -eq $nScripts ] ; then

(echo -n ' ' ) >> Timings/Timings-initialisation.txt
(echo -n Ending   st1 xg2 ' ' ; date ) >> Timings/Timings-initialisation.txt

fi
